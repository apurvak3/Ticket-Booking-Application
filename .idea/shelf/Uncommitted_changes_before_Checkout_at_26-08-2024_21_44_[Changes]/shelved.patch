Index: backend/SeatSeeker-Backend/src/main/java/com/seatseeker/app/backend/SeatSeeker_Backend/controllers/MovieController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.seatseeker.app.backend.SeatSeeker_Backend.controllers;\r\n\r\nimport com.seatseeker.app.backend.SeatSeeker_Backend.Dto.MovieDto;\r\nimport com.seatseeker.app.backend.SeatSeeker_Backend.entities.Movie;\r\nimport com.seatseeker.app.backend.SeatSeeker_Backend.services.MovieService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"movie\")\r\npublic class MovieController {\r\n\r\n    @Autowired\r\n    private MovieService movieService;\r\n\r\n    @GetMapping(\"get-all\")\r\n    public List<MovieDto> getAllMovies() {\r\n        return movieService.getAllMovies();\r\n    }\r\n\r\n    @GetMapping(\"{id}\")\r\n    public ResponseEntity<?> getMovieById(@PathVariable Integer id) {\r\n        try {\r\n            MovieDto movie = movieService.getMovieById(id);\r\n            return new ResponseEntity<>(movie, HttpStatus.OK);\r\n        } catch (Exception e) {\r\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"add\")\r\n    public MovieDto addMovie(@RequestBody MovieDto movie) {\r\n        return movieService.addMovie(movie);\r\n    }\r\n\r\n    @PutMapping(\"{id}\")\r\n    public ResponseEntity<?> updateMovie(@PathVariable Integer id, @RequestBody MovieDto movie) {\r\n        try {\r\n            MovieDto movieToBeUpdate = movieService.updateMovie(id, movie);\r\n            return new ResponseEntity<>(movieToBeUpdate, HttpStatus.OK);\r\n        } catch (Exception e) {\r\n            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);\r\n        }\r\n    }\r\n\r\n    @DeleteMapping(\"{id}\")\r\n    public ResponseEntity<?> deleteMovie(@PathVariable Integer id) {\r\n        try {\r\n            movieService.deleteMovieById(id);\r\n            return new ResponseEntity<>(HttpStatus.NO_CONTENT);\r\n        } catch (Exception e) {\r\n            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/backend/SeatSeeker-Backend/src/main/java/com/seatseeker/app/backend/SeatSeeker_Backend/controllers/MovieController.java b/backend/SeatSeeker-Backend/src/main/java/com/seatseeker/app/backend/SeatSeeker_Backend/controllers/MovieController.java
--- a/backend/SeatSeeker-Backend/src/main/java/com/seatseeker/app/backend/SeatSeeker_Backend/controllers/MovieController.java	
+++ b/backend/SeatSeeker-Backend/src/main/java/com/seatseeker/app/backend/SeatSeeker_Backend/controllers/MovieController.java	
@@ -1,7 +1,6 @@
 package com.seatseeker.app.backend.SeatSeeker_Backend.controllers;
 
 import com.seatseeker.app.backend.SeatSeeker_Backend.Dto.MovieDto;
-import com.seatseeker.app.backend.SeatSeeker_Backend.entities.Movie;
 import com.seatseeker.app.backend.SeatSeeker_Backend.services.MovieService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
